# vim: ft=bash

if [[ ! -z $BASH ]]; then
    THIS_SHELL=bash
else
    THIS_SHELL=$(basename $SHELL)
fi

export GIT_EMAIL="mhristof@gmail.com"
export NVIM_LISTEN_ADDRESS=/tmp/nvim
export EDITOR="nvim"
export GOPATH=$HOME/go
export GOPROXY=direct

# allow the next section to re-arrange paths
export PATH=$HOME/.aws-cli/aws-cli:$PATH # aws has its own python in there, so add it to the bottom of the food chain
export PATH=/usr/local/opt/openjdk/bin:$PATH
export PATH=$GOPATH/bin:$PATH
export PATH=/opt/homebrew/bin:/usr/local/sbin:/usr/local/bin:$PATH
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
export PATH=/opt/homebrew/opt/curl/bin:$PATH
export PATH=/opt/homebrew/opt/python/libexec/bin:$PATH
while read -r folder; do
    export PATH=$folder/bin/:$PATH
done < <(find $HOME/Library/Python -mindepth 1 -maxdepth 1 -type d)
export PATH=/opt/homebrew/opt/findutils/libexec/gnubin:$PATH
export PATH=/opt/homebrew/opt/grep/libexec/gnubin:$PATH
export PATH=/opt/homebrew/opt/make/libexec/gnubin:$PATH
export PATH=/opt/homebrew/opt/libpq/bin:$PATH
export PATH=/opt/homebrew/opt/gettext/bin:$PATH
export PATH=/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH
export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
export PATH=$HOME/.brew/opt/openvpn/sbin:/opt/homebrew/opt/openvpn/sbin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.local/dotfiles/bin:$PATH
export PATH=$HOME/.bash-my-aws/bin:$PATH
export PATH=$HOME/.sessionmanager-bundle/bin:$PATH
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

export DENO_INSTALL="$HOME/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"

eval "$(/opt/homebrew/bin/brew shellenv)"
export XDG_CACHE_HOME=$HOME/.cache
export XDG_CONFIG_HOME=$HOME/.config


export HISTCONTROL=ignoredups:erasedups
export MANPAGER="sh -c 'col -bx | bat -p -lman --theme gruvbox-dark'"
export PYTHONSTARTUP=~/.pythonrc.py

if [[ $THIS_SHELL == "bash" ]]; then
    # When the shell exits, append to the history file instead of overwriting it
    shopt -s histappend
fi


# After each command, append to the history file and reread it
export HISTSIZE=99999999
export HISTFILESIZE=
export HISTTIMEFORMAT='%F %T '
export AWS_MAX_ATTEMPTS=10
export FZF_DEFAULT_COMMAND='ag -l --hidden'

alias .....='c ../../../../'
alias ....='c ../../../'
alias ...='c ../../'
alias ..='c ../'
alias ..r='cd $(git rev-parse --show-toplevel)'
alias acm-pca-active="aws acm-pca list-certificate-authorities | jq '.CertificateAuthorities[] | select(.Status == \"ACTIVE\") | [.CertificateAuthorityConfiguration.Subject.CommonName, .Arn, .Status] | @csv' -r | column -s, -t"
alias acm-pca-disabled="aws acm-pca list-certificate-authorities | jq '.CertificateAuthorities[] | select(.Status == \"DISABLED\") | [.CertificateAuthorityConfiguration.Subject.CommonName, .Arn, .Status] | @csv' -r | column -s, -t"
alias agh='ag --hidden'
alias agt='ag --terraform'
alias al='ansible-playbook -i "localhost," -c local'
alias ap='ansible-playbook'
alias ctmp='mkdir -p ~/tmp/$(date +"%Y%m%d_%H%M%S") && cd $_'
alias cv='cd $(dirname $(nvim-pwd.py))'
alias cvr='cd $(git -C $(dirname $(nvim-pwd.py))  rev-parse --show-toplevel)'
alias dc='docker-compose'
alias df='df -h'
alias dp='git diff --no-ext-diff $(git-main.sh)..HEAD'
alias dr='git diff --cached'
alias drit='docker run -it'
alias f='fd'
alias ff='find . -type f -printf "%T@ %p\n" | sort -n | tail -5 | cut -f2- -d" "'
alias fff='find . -type f -printf "%T@ %p\n" | sort -n | tail -10 | cut -f2- -d" "'
alias fu='fuck'
alias ga='git add'
alias gcm='git checkout master'
alias gg='git pull --rebase && git fetch --prune'
alias gl='git log --graph --oneline --decorate --date=relative --all --pretty=format:"%C(yellow)%h%C(reset) %ar %C(green)(%cn) (%ae) %C(reset) %C(red)%x09%d%C(reset) %w(80, 1, 20) %s%n" --color'
alias gp='git push'
alias gpt='git push --tags'
alias grc='git rebase --continue'
alias grep='grep --color=auto'
alias grim='git rebase -i main'
alias gs='git stash'
alias gsa='git stash apply'
alias gsp='git stash pop'
alias gss='git stash --keep-index'
alias hgroot='cd $(git rev-parse --show-toplevel)'
alias history_populate="history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -rn  | head"
alias k=kubectl
alias kcc='kubectl create'
alias kcd='kubectl delete'
alias kens=kubens
alias m='make'
alias mkalfredgo='cookiecutter gh:mhristof/cookiecutter-alfred-go'
alias mkgo='cookiecutter gh:mhristof/cookiecutter-golang-cmd'
alias rl='readlink -f'
alias s='git status'
alias tf='terraform'
alias v='vim'
alias ve='~/bin/nvim-edit.py'
alias vrc='vim ~/.config/nvim/init.vim'
alias wget100='wget -O /dev/null http://speedtest.london.linode.com/100MB-london.bin'
alias work='eval $(~/bin/gitlab-work.sh "$(pbpaste)")'


if command -v exa &> /dev/null; then
    alias ls='exa'
    alias l='exa --time-style long-iso --binary --header --group --long  --created -all --git --links'
    alias lt='l --sort created'
    alias ltc='l --sort created'
    alias lts='l --sort size'
    alias tree='ls --tree'
    alias tree2='ls --tree --level 2'
    alias tree3='ls --tree --level 3'
    alias tree4='ls --tree --level 4'
fi

while read -r file; do
    autoload $file
done < <(find $HOME/.zsh.autoload/ -type f)

while read -r file; do
    base="$(basename $file)"
    source $file && compdef $base ${base/_/}
done < <(find $HOME/.zsh.site-functions -type f)

src "${HOME}/.fzf.zsh"
src "${HOME}/dotfiles/z.sh"
src "${HOME}/.bash-my-aws/aliases"
src "${HOME}/.bash-my-aws/bash_completion.sh"
src "${HOME}/.brew/etc/profile.d/bash_completion.sh"
src "/opt/homebrew/opt/powerlevel10k/powerlevel10k.zsh-theme"
src "$HOME/.p10k.zsh" # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
src "${HOME}/.iterm2_shell_integration.zsh"

export PATH="$HOME/bin:$PATH"
export PATH=$(echo -n $PATH | awk -v RS=: -v ORS=: '!arr[$0]++') # remove duplicates


export VAULT_ADDR='http://127.0.0.1:8200'
export AWS_SDK_LOAD_CONFIG=1
export AWS_PAGER=""
export HOMEBREW_NO_AUTO_UPDATE=1

(
    unalias gap || true
    unalias gam || true
    unalias stacks || true
    unalias dst || true
    unalias instances || true
) &> /dev/null


src "${HOME}/.dotfilesrc.local"
complete -C '/usr/local/bin/aws_completer' aws
complete -o nospace -C $HOME/.local/bin/terraform terraform

_Z_CMD=j
alias j=z
unset -f d &> /dev/null || true

export GPG_TTY=$(tty)
gpgconf --launch gpg-agent
command -v direnv &> /dev/null && eval "$(direnv hook zsh)"

