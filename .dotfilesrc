# vim: ft=bash

if [[ ! -z $BASH ]]; then
    THIS_SHELL=bash
else
    THIS_SHELL=$(basename $SHELL)
fi

export GIT_EMAIL="mhristof@gmail.com"
export EDITOR="vim -X"

# allow the next section to re-arrange paths
export PATH=$HOME/.aws-cli/aws-cli:$PATH # aws has its own python in there, so add it to the bottom of the food chain
export PATH=$GOPATH/bin:$PATH
export PATH=$HOME/.brew/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:$PATH
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
export PATH=$HOME/.brew/opt/curl/bin:/usr/local/opt/curl/bin:$PATH
export PATH=$HOME/.brew/opt/python/libexec/bin:/usr/local/opt/python/libexec/bin:$PATH
export PATH=$HOME/Library/Python/3.7/bin:$PATH
export PATH=$HOME/.brew/opt/findutils/libexec/gnubin:/usr/local/opt/findutils/libexec/gnubin:$PATH
export PATH=$HOME/.brew/opt/grep/libexec/gnubin:/usr/local/opt/grep/libexec/gnubin:$PATH
export PATH=$HOME/.brew/opt/make/libexec/gnubin:/usr/local/opt/make/libexec/gnubin:$PATH
export PATH=$HOME/.brew/opt/gettext/bin:/usr/local/opt/gettext/bin:$PATH
export PATH=$HOME/.brew/opt/coreutils/libexec/gnubin:/usr/local/opt/coreutils/libexec/gnubin:$PATH
export PATH=$HOME/.brew/opt/openvpn/sbin:/usr/local/opt/openvpn/sbin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.bash-my-aws/bin:$PATH

export PYTHONSTARTUP=~/.pythonrc.py
export HISTCONTROL=ignoredups:erasedups

if [[ $THIS_SHELL == "bash" ]]; then
    # When the shell exits, append to the history file instead of overwriting it
    shopt -s histappend
fi


# After each command, append to the history file and reread it
export HISTSIZE=99999999
export HISTFILESIZE=
export HISTTIMEFORMAT='%F %T '

export LESSOPEN="| $HOME/.brew/bin/src-hilite-lesspipe.sh %s"
export LESS=' -R '

alias ..='c ../'
alias ...='c ../../'
alias ....='c ../../../'
alias .....='c ../../../../'
alias v='vim'
alias vrc='vim ~/.vimrc'
alias history_populate="history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -rn  | head"
alias lt='ls -alt'
alias grep='grep --color=auto'
alias df='df -h'
alias ctmp='mkdir -p ~/tmp/$(date +"%Y%m%d_%H%M%S") && cd $_'
alias m='make'
alias f='find'
alias rl='readlink -f'
alias ff='find . -type f -printf "%T@ %p\n" | sort -n | tail -5 | cut -f2- -d" "'
alias fff='find . -type f -printf "%T@ %p\n" | sort -n | tail -10 | cut -f2- -d" "'
alias al='ansible-playbook -i "localhost," -c local'
alias ap='ansible-playbook'
alias gg='git pull && git fetch --prune'
alias gp='git push'
alias s='git status'
alias d='git diff'
alias ga='git add'
alias gs='git stash'
alias gsa='git stash apply'
alias dr='git diff --cached'
alias gcm='git checkout master'
alias gl='git log --graph --oneline --decorate --date=relative --all --pretty=format:"%C(yellow)%h%C(reset) %ar %C(green)(%cn) (%ae) %C(reset) %C(red)%x09%d%C(reset) %w(80, 1, 20) %s%n" --color'
alias wget100='wget -O /dev/null http://speedtest.london.linode.com/100MB-london.bin'
alias dc='docker-compose'
alias tf='terraform'
which hub &> /dev/null
if [[ $? -eq 0 ]]; then
    eval "$(hub alias -s)"
fi
alias agh='ag --hidden'
alias agt='ag --terraform'
alias tpl='terraform plan -out plan.out'
alias tfp='terraform plan -out plan.out'
alias kcc='kubectl create'
alias kcd='kubectl delete'
alias drit='docker run -it'
alias fu='fuck'
alias k=kubectl
alias kens=kubens
alias acm-pca-active="aws acm-pca list-certificate-authorities | jq '.CertificateAuthorities[] | select(.Status == \"ACTIVE\") | [.CertificateAuthorityConfiguration.Subject.CommonName, .Arn, .Status] | @csv' -r | column -s, -t"
alias acm-pca-disabled="aws acm-pca list-certificate-authorities | jq '.CertificateAuthorities[] | select(.Status == \"DISABLED\") | [.CertificateAuthorityConfiguration.Subject.CommonName, .Arn, .Status] | @csv' -r | column -s, -t"
alias mkgo='cookiecutter gh:mhristof/cookiecutter-golang-cmd'
alias mkalfredgo='cookiecutter gh:mhristof/cookiecutter-alfred-go'
alias dmas='git diff master -- . || git diff main -- .'

unalias gp
alias gap=ls
unalias gap
alias gam=ls
unalias gam

case $(uname) in
    Darwin)
    alias l='ls -lah'
    alias ls='ls --color=auto'
    alias yoink='open -a Yoink'
    ;;
esac


while read -r file; do
    autoload $file
done < <(find $HOME/.zsh.autoload/ -type f)

while read -r file; do
    base="$(basename $file)"
    source $file && compdef $base ${base/_/}
done < <(find $HOME/.zsh.site-functions -type f)

src "${HOME}/.iterm2_shell_integration.zsh"
src "${HOME}/.fzf.zsh"
src "$HOME/.brew/etc/profile.d/autojump.sh"
src "$HOME/.local/etc/profile.d/autojump.sh"
src "/usr/local/etc/profile.d/autojump.sh"
src "${HOME}/.bash-my-aws/aliases"
src "${HOME}/.bash-my-aws/bash_completion.sh"
src "${HOME}/.brew/etc/profile.d/bash_completion.sh"
export GOPATH=$HOME/go

export PATH=~/bin:$PATH
export PATH=$(echo -n $PATH | awk -v RS=: -v ORS=: '!arr[$0]++') # remove duplicates


export VAULT_ADDR='http://127.0.0.1:8200'
export AWS_SDK_LOAD_CONFIG=1
export AWS_PAGER=""
export HOMEBREW_NO_AUTO_UPDATE=1

src "${HOME}/.dotfilesrc.local"
