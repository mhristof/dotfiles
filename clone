#!/usr/bin/env bash
set -euo pipefail

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
URL=${1:-}

die() {
    echo "$*" 1>&2
    exit 1
}

if [[ -z $URL ]]; then
    if [[ -z ${GITLAB_TOKEN:-} ]]; then
        eval $(/usr/bin/security find-generic-password -s germ -w -a GITLAB_READONLY_TOKEN)
        export GITLAB_TOKEN=$GITLAB_READONLY_TOKEN
    fi

    PROJECT=$(sed "s!$HOME/code/git....com/!!g" <<<"$PWD" | cut -d/ -f1)
    URL=$(glab api "/groups/$PROJECT/projects?include_subgroups=true" --paginate | jq '.[].ssh_url_to_repo' -r | fzf)
    echo "project: $PROJECT url: $URL"
fi

if [[ -z $URL ]]; then
    die "Please provide a URL"
fi

dest=${URL/https:\/\//~/code/}
dest=${dest/http:\/\//~/code/}
dest=${dest/git@github.com:/~/code/github.com/}
dest=${dest/git@gitlab.com:/~/code/gitlab.com/}
dest=${dest/.git/}

cmd="git clone $URL $dest"
if [[ "${DRY:-}" == "true" ]]; then
    echo "dry $cmd"
    exit 0
fi

eval "$cmd"

which pre-commit &>/dev/null || {
    pip install pre-commit
}

if [[ -f $dest/.pre-commit-config.yaml ]]; then
    cd "$dest" && pre-commit install
fi

if [[ -f $DIR/update-fzf-projects-vim.sh ]]; then
    "$DIR/update-fzf-projects-vim.sh"
fi
