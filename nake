#!/usr/bin/env bash

set -euo pipefail

if [[ -f Makefile ]]; then
    make "$@"
    exit 0
else
    cat ~/.vim/bundle/vim-template/templates/=template=GNUmakefile > Makefile
    sed -i '' -e 's/^    /	/g' Makefile
fi


TF=$(find ./ -name '*.tf' | wc -l)
if [[ $TF -gt 0 ]]; then
    cat << EOF >> Makefile

TF_SRC := \$(shell find ./ -maxdepth 1 -name "*.tf")
.DEFAULT_GOAL = terraform.tfstate

.terraform:  ## Runs 'terraform init' and creates .terraform folder
	terraform init

tf.plan: \$(TF_SRC) .terraform  ## Runs 'terraform plan' and creates a plan file
	terraform plan -out tf.plan

terraform.tfstate: tf.plan  ## Runs 'terraform apply' and applies the previously created plan file.
	terraform apply "tf.plan"

force:
	touch *.tf
	make terraform.tfstate

README.md: *.tf  ## Update README.md with 'terraform-docs'
	sed -i'' -e '/^## Providers\$\$/,\$\$d' README.md
	terraform-docs md . >> README.md

clean: .terraform  ## Runs 'terraform destroy' and deletes all resources
	terraform destroy -auto-approve
	rm terraform.tfstate* tf.plan
.PHONY: clean
EOF
fi

PY=$(find ./ -name '*.py' | wc -l)
if [[ $PY -gt 0 ]]; then
    cat << EOF >> Makefile
pep8:  ## Runs pep8 for curent directory
	pycodestyle --ignore=E501 .
.PHONY: pep8
EOF
fi


function  dockerAdds {
    while read -r line; do
        echo -e "\$(wildcard $line)"
    done < <(grep ^ADD Dockerfile | cut -d' ' -f2)
}

if [[ -f Dockerfile ]]; then
    cat << EOF >> Makefile

IMAGE := $(basename "$(PWD)" | tr '[:upper:]' '[:lower:]' )
build: .build
.PHONY: build

.build: $(dockerAdds)
	docker build -t \$(IMAGE) .
	touch .build

bash: .build
	docker run --rm -it \$(IMAGE) /bin/bash
.PHONY: bash

run: .build
	docker run --rm -it \$(IMAGE)
.PHONY: run

clean:
	rm -rf .build
.PHONY: clean

EOF
fi


if [[ -f docker-compose.yml ]]; then
    cat << EOF >> Makefile
up:
	docker-compose up
.PHONY: up

down:
	docker-compose down
.PHONY: down

up-d:
	docker-compose up --detach
.PHONY: up-d

clean:
	docker-compose down --rmi local --volumes --remove-orphans
.PHONY: clean

nuke: clean
	docker-compose down --rmi all
.PHONY: nuke

EOF
fi
make "$@"
